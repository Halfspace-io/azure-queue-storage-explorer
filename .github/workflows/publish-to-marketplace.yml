name: Publish to VS Code Marketplace

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to publish (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Get release tag
      id: release-tag
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          RELEASE_TAG="${{ github.event.release.tag_name }}"
        else
          RELEASE_TAG="${{ github.event.inputs.release_tag }}"
        fi
        echo "release-tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
        echo "Publishing release: $RELEASE_TAG"
        
        # Debug: Check token permissions and list releases
        echo "Checking GitHub CLI authentication..."
        gh auth status
        
        echo "Available releases:"
        gh release list --limit 5 || echo "Failed to list releases"
        
        
    - name: Publish to VS Code Marketplace
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Install vsce
        npm install -g @vscode/vsce
        
        # Get release tag
        RELEASE_TAG="${{ steps.release-tag.outputs.release-tag }}"
        
        # Debug: Check release details and assets
        echo "Checking release details for $RELEASE_TAG..."
        gh release view "$RELEASE_TAG" --json assets
        
        # Find the .vsix file in release assets
        echo "Looking for .vsix file in assets..."
        VSIX_FILE=$(gh release view "$RELEASE_TAG" --json assets --jq '.assets[] | select(.name | contains(".vsix")) | .name' | head -n1)
        echo "Found .vsix file: $VSIX_FILE"
        
        # Download the .vsix file
        echo "Downloading $VSIX_FILE..."
        gh release download "$RELEASE_TAG" --pattern "$VSIX_FILE"
        
        # Publish to marketplace
        echo "ðŸš€ Publishing $VSIX_FILE to VS Code Marketplace..."
        vsce publish --packagePath "$VSIX_FILE"
        
        echo "âœ… Successfully published $VSIX_FILE to VS Code Marketplace!"
        
    - name: Update release notes
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_TAG="${{ steps.release-tag.outputs.release-tag }}"
        
        # Add marketplace link to release notes
        MARKETPLACE_URL="https://marketplace.visualstudio.com/items?itemName=wojciechciok.azure-queue-storage-explorer"
        
        echo "Getting current release body for $RELEASE_TAG..."
        # Get current release body
        CURRENT_BODY=$(gh release view "$RELEASE_TAG" --json body --jq '.body')
        echo "Current body length: ${#CURRENT_BODY}"
        
        # Add marketplace link if not already present
        if ! echo "$CURRENT_BODY" | grep -q "marketplace.visualstudio.com"; then
          echo "Adding marketplace link to release notes..."
          NEW_BODY="$CURRENT_BODY"$'\n\n'"## ðŸ“¦ VS Code Marketplace"$'\n'"[Install from VS Code Marketplace]($MARKETPLACE_URL)"
          
          gh release edit "$RELEASE_TAG" --notes "$NEW_BODY"
          echo "âœ… Updated release notes with marketplace link"
        else
          echo "âœ… Marketplace link already present in release notes"
        fi
